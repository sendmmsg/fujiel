# example use with esphome
esphome:
  name: livingac
  libraries:
    - IRremoteESP8266

esp32:
  board: firebeetle32
  framework:
    type: arduino
# Enable logging
logger:

# Enable Home Assistant API
api:
  password: ""

ota:
  - platform: esphome
    password: ""

wifi:
  ssid: "ppap"
  password: "XXXXXXXX"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Ac1 Fallback Hotspot"
    password: "dfzVqncv8kYl"

captive_portal:

web_server:
  port: 80

# sensor with BME280 and ENS160
i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true
  id: bus_a

# IR transmitter on pin 26
remote_transmitter:
  pin: GPIO26
  carrier_duty_percent: 50%

external_components:
  # shorthand
  source: github://sendmmsg/fujiel
  components: [ fuji_el ]

climate:
  - platform: fuji_el
    name: "Livingroom AC"
    sensor: living_temp
    visual:
      min_temperature: 10
      max_temperature: 22
      temperature_step: 
        target_temperature: 1.0
        current_temperature: 0.1



sensor:
  - platform: bme280_i2c
    temperature:
      name: "BME280 Temperature"
      id: bme280_temperature
    pressure:
      name: "BME280 Pressure"
      id: bme280_pressure
    humidity:
      name: "BME280 Relative Humidity"
      id: bme280_humidity
    address: 0x77
    update_interval: 15s
    iir_filter: 16x

  - platform: ens160_i2c
    eco2:
      name: "ENS160 eCO2"
    tvoc:
      name: "ENS160 Total Volatile Organic Compounds"
    aqi:
      id: ens160_air_quality_index
      name: "ENS160 Air Quality Index"
    update_interval: 60s
    address: 0x53
    compensation:
      temperature: bme280_temperature
      humidity: bme280_humidity

  - platform: template
    name: "Altitude"
    lambda: |-
      const float STANDARD_SEA_LEVEL_PRESSURE = 1013.25; //in hPa, see note
      return ((id(bme280_temperature).state + 273.15) / 0.0065) *
        (powf((STANDARD_SEA_LEVEL_PRESSURE / id(bme280_pressure).state), 0.190234) - 1); // in meter
    update_interval: 15s
    icon: 'mdi:signal'
    unit_of_measurement: 'm'

  - platform: absolute_humidity
    name: "Absolute Humidity"
    temperature: bme280_temperature
    humidity: bme280_humidity

  - platform: template
    name: "Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
      (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
      ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'

  # refer to an existing temperature, necessary I think but has no actual effect
  # the BME280 temp is off by a few degrees, use a zigbee temp from home assistant
  - platform: homeassistant
    name: "Zigbee temp"
    id: living_temp
    entity_id: sensor.sod_temperature_3
    internal: false 
    accuracy_decimals: 2
    icon: 'mdi:thermometer-alert'
    unit_of_measurement: °C








